#
## Preferences for PIDKiln system
#

#
# WiFi/Network preferences
#
# WiFi client mode
# SSID and password for AP to which PIDKiln should try to connect
WiFi_SSID = WirelessB
WiFi_Password = greasy@pizza

# how many seconds PIDKiln tries to connect to WiFi AP. 0 - infinite loop
WiFi_Retry_cnt = 20

# In what WiFi mode PIDKiln should operate
# 0 = no WiFi; 1 = connect to AP - if failed, be AP (default); 2 = connect only to AP; 3 - be only AP
WiFi_Mode = 1

#
# HTTP server configuration
#
# Should the large JS script be download from Internet (0) or be send from local http server (1)
# Default is 1, but if possible use Internet - ESP32 may trigger reboot if sending will not end in watchdog time
HTTP_Local_JS = 1

#
# Web authentication
#
Auth_Username = Kendrick
Auth_Password = PIDKiln

#
# Time and NTP setup
#
# NTP servers to synchronize time if Internet connection is available
NTP_Server1 = 0.pl.pool.ntp.org
NTP_Server2 = 1.pl.pool.ntp.org
NTP_Server3 = 2.pl.pool.ntp.org

# Time offset (+/-) comparing to GMT time and daylight change if exists
GMT_Offset_sec = -7
Daylight_Offset_sec = 1

# If you don't have Internet connection to use NTP, this time will be set always after PIDKiln start
Initial_date = 2020-07-20
Initial_time = 11:00:00

#
# PID Configuration
#
# PID Window size in ms - this is PID cycle
PID_Window = 5000

# Initial PID parameters 0-255 float
PID_Kp = 20
PID_Ki = 0.2
PID_Kd = 0.1

# How big difference between SET and CURRENT temperature we can tolerate, if modulo is bigger - go to dwell (wait until it's reached)
# Warning! if this temperature never is reached it will stop the program. Default -1 = do not wait.
PID_Temp_Threshold = -1

#
# Logging configuration
#
# How often should we log running program (and housing - if present) temperature to CSV file (in seconds), 0 - disable logging
LOG_Window = 30
# How many log files we should keep on drive. 0=unlimited (try to make this number even). PIDKiln will delete oldest files, but since SPIFFS does not
# have file dates, it will be done based on filename, by default filenames start with date. Remember that every program run produces 2 files.
LOG_Files_Limit = 40
# Define if we should have some logging/debug over serial port and/or Syslog
DBG_Serial = 1
DBG_Syslog = 0
# If you use Syslog - provide host IP and syslog PORT
DBG_Syslog_Srv = 192.168.2.31
DBG_Syslog_Port = 514

#
# Safety parameters
#
# If registered MIN temperature or less - assume error and abort
MIN_Temperature = 10

# If registered MAX or above - assume error and abort, do not allow to register higher temperatures in program definition
MAX_Temperature = 1350

# If housing temperature C is above this - abort
MAX_Housing_Temperature = 130

# How long (in minutes) controller will try to heat up kiln without increase in temperature before aborting.
# This should detect failed heating element (if you have just one - with many this may not work).
# It's disabled (0) by default, because it's very depending on your hw configuration and there is no good value for everyone.
# This works like this. When in heating up (not dwell or cool down) mode and set temperature is 5+C bigger then current temperature (5C because of possible measurement errors)
# PIDKiln will start to count Thermal_Runaway window. If temperature will not go up in this time period for additional +5C, abort.
# Keep in mind that PID algorithm may react slowly - so this value should be quite big (and also depends of your heating element power).
Thermal_Runaway = 0

# How long (seconds) should we keep ALARM_PIN high after program abort (something wrong has happen) - 0 = alarm disabled.
Alarm_Timeout = 5

